
# Spark Config
spark.master=local[*]
spark.executor.cores=1
spark.executor.memory=8g
spark.sql.extensions=org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions

spark.sql.catalog.dev=org.apache.iceberg.spark.SparkCatalog
spark.sql.catalog.dev.type=rest
spark.sql.catalog.dev.uri=http://localhost:9001/iceberg/

sourcePath=/mnt/d/Misc/Preperation/TPC/Tools/SRC3/Batch1

#spark.local.dir=/u01/sparkTempDir,/tmp/sparkTmp
# spark.executor.extraJavaOptions=-XX:+UseG1GC
# spark.driver.extraJavaOptions=-XX:+UseG1GC
#spark.driver.memory=1024g
#spark.driver.memory=512g
#spark.driver.memoryOverhead=64g
#spark.executor.memoryOverhead=64g
#spark.sql.shuffle.partitions=200
#spark.sql.shuffle.partitions=1000

#spark.sql.parquet.rowGroupSize=1073741824
# spark.sql.files.maxPartitionBytes=536870912
# spark.shuffle.spill.compress=true
#spark.sql.parquet.writer.batch.size=10485760
#spark.sql.parquet.writer.buffer.size=5242880
# spark.sql.parquet.writer.batch.size=16777216
# spark.sql.parquet.writer.buffer.size=8388608



# Target Iceberg SparkCatalog (oci://<bucket>@<tenancy>/sparkDataload)
# spark.sql.catalog.dev.warehouse=oci://dataload-internal@devbigdata/sparkloadTest2

# List of Tables
#tableList = call_center,catalog_page,catalog_returns,catalog_sales,customer,customer_address,customer_demographics,date_dim,household_demographics,income_band,inventory,item,promotion,reason,ship_mode,store,store_returns,store_sales,time_dim,warehouse,web_page,web_returns,web_sales,web_site
#tableList=catalog_returns,catalog_sales,customer,customer_address,customer_demographics,date_dim,household_demographics,income_band,inventory,item,promotion,reason,ship_mode,store,store_returns,store_sales,time_dim,warehouse,web_page,web_returns,web_sales,web_site
#tableList=store_sales,time_dim,warehouse,web_page,web_returns,web_sales,web_site
# tableList = web_sales
#tableList=rest.tpcds.CALL_CENTER,rest.tpcds.CATALOG_PAGE,rest.tpcds.CATALOG_RETURNS
#tableList=SAMPLETABLE

tableList=CashTransaction.txt
readOption.delimiter=|

# Iceberg Config
namespace = default



# Log output level (INFO|DEBUG|ERROR)
logOutput=INFO

# Source Format (jdbc|parquet|csv|iceberg|sql)
#format=iceberg
format=csv

#readOption.url=jdbc:oracle:thin:@rjatp_low?TNS_ADMIN=/u02/wallets/Wallet_RJATP
#readOption.user=TESTUSER5
#readOption.password=Welcome123456
#readOption.oracle.net.ssl_server_dn_match=true
#readOption.oracle.net.wallet_location=(SOURCE=(METHOD=file)(METHOD_DATA=(DIRECTORY=/u02/wallets/Wallet_RJATP)))

# sqlQuery="WITH year_total AS (SELECT c_customer_id customer_id, c_first_name customer_first_name, c_last_name customer_last_name, d_year AS year1, Sum(ss_net_paid) year_total, 's' sale_type FROM dev.default.CUSTOMER, dev.default.STORE_SALES, dev.default.DATE_DIM WHERE c_customer_sk = ss_customer_sk AND ss_sold_date_sk = d_date_sk AND d_year IN ( 1999, 1999 + 1 ) GROUP BY c_customer_id, c_first_name, c_last_name, d_year UNION ALL SELECT c_customer_id customer_id, c_first_name customer_first_name, c_last_name customer_last_name, d_year AS year1, Sum(ws_net_paid) year_total, 'w' sale_type FROM dev.default.CUSTOMER, dev.default.WEB_SALES, dev.default.DATE_DIM WHERE c_customer_sk = ws_bill_customer_sk AND ws_sold_date_sk = d_date_sk AND d_year IN ( 1999, 1999 + 1 ) GROUP BY c_customer_id, c_first_name, c_last_name, d_year) SELECT t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name FROM year_total t_s_firstyear, year_total t_s_secyear, year_total t_w_firstyear, year_total t_w_secyear WHERE t_s_secyear.customer_id = t_s_firstyear.customer_id AND t_s_firstyear.customer_id = t_w_secyear.customer_id AND t_s_firstyear.customer_id = t_w_firstyear.customer_id AND t_s_firstyear.sale_type = 's' AND t_w_firstyear.sale_type = 'w' AND t_s_secyear.sale_type = 's' AND t_w_secyear.sale_type = 'w' AND t_s_firstyear.year1 = 1999 AND t_s_secyear.year1 = 1999 + 1 AND t_w_firstyear.year1 = 1999 AND t_w_secyear.year1 = 1999 + 1 AND t_s_firstyear.year_total > 0 AND t_w_firstyear.year_total > 0 AND CASE WHEN t_w_firstyear.year_total > 0 THEN t_w_secyear.year_total/t_w_firstyear.year_total ELSE NULL END > CASE WHEN t_s_firstyear.year_total > 0 THEN t_s_secyear.year_total / t_s_firstyear.year_total ELSE NULL END ORDER BY 1, 2, 3"

# targetIcebergName=SPARK_SQL_AS_TARGET

# writeOption.write.parquet.row-group-size-bytes=1073741824
# writeOption.write.parquet.block-size=536870912

keepAlive=true
